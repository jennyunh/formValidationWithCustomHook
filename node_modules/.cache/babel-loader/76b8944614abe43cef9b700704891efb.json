{"ast":null,"code":"var _jsxFileName = \"/Users/jennyhwang/Desktop/FormsValidation/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n  let emailIsValid = false;\n\n  if (enteredNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputHandler,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","formIsValid","emailIsValid","nameInputHandler","event","target","value","onSubmitHandler","e","preventDefault","nameInputBlurHandler","nameInputClasses","emailInputHandler","emailBlurHandler"],"sources":["/Users/jennyhwang/Desktop/FormsValidation/src/components/SimpleInput.js"],"sourcesContent":["import { useState} from 'react';\n\n\n\nconst SimpleInput = (props) => {\n\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\nconst enteredNameIsValid = enteredName.trim() !== '';\nconst nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\nlet formIsValid = false;\nlet emailIsValid = false;\n\nif (enteredNameIsValid && emailIsValid) {\n  formIsValid=true;\n}\n\n\n\n\n\nconst nameInputHandler = event => {\n  setEnteredName(event.target.value);\n  }\n\n\nconst onSubmitHandler = (e) => {\ne.preventDefault();\nsetEnteredNameTouched(true);\n\nif (!enteredNameIsValid) {\n  return\n}\n\nsetEnteredName('');\nsetEnteredNameTouched(false);\n\n}\n\n\nconst nameInputBlurHandler = (e) => {\n  setEnteredNameTouched(true)\n\n}\n\n\nconst nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        type='text' id='name' \n        onChange={nameInputHandler}\n        onBlur={nameInputBlurHandler}/>\n    {nameInputIsInvalid && <p className=\"error-text\">Name must be empty</p>}\n      </div>\n\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Your Email</label>\n        <input \n        type='text' id='email' \n        onChange={emailInputHandler}\n        onBlur={emailBlurHandler}/>\n    {nameInputIsInvalid && <p className=\"error-text\">Name must be empty</p>}\n      </div>\n\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAwB,OAAxB;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAG7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EAEF,MAAMO,kBAAkB,GAAGJ,WAAW,CAACK,IAAZ,OAAuB,EAAlD;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBF,kBAAlD;EACA,IAAIK,WAAW,GAAG,KAAlB;EACA,IAAIC,YAAY,GAAG,KAAnB;;EAEA,IAAIJ,kBAAkB,IAAII,YAA1B,EAAwC;IACtCD,WAAW,GAAC,IAAZ;EACD;;EAMD,MAAME,gBAAgB,GAAGC,KAAK,IAAI;IAChCT,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACC,CAFH;;EAKA,MAAMC,eAAe,GAAIC,CAAD,IAAO;IAC/BA,CAAC,CAACC,cAAF;IACAZ,qBAAqB,CAAC,IAAD,CAArB;;IAEA,IAAI,CAACC,kBAAL,EAAyB;MACvB;IACD;;IAEDH,cAAc,CAAC,EAAD,CAAd;IACAE,qBAAqB,CAAC,KAAD,CAArB;EAEC,CAXD;;EAcA,MAAMa,oBAAoB,GAAIF,CAAD,IAAO;IAClCX,qBAAqB,CAAC,IAAD,CAArB;EAED,CAHD;;EAMA,MAAMc,gBAAgB,GAAGX,kBAAkB,GAAG,sBAAH,GAA4B,cAAvE;EAEE,oBACE;IAAM,QAAQ,EAAEO,eAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACA,IAAI,EAAC,MADL;QACY,EAAE,EAAC,MADf;QAEA,QAAQ,EAAER,gBAFV;QAGA,MAAM,EAAEO;MAHR;QAAA;QAAA;QAAA;MAAA,QAFF,EAMDV,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANrB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAK,SAAS,EAAEW,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACA,IAAI,EAAC,MADL;QACY,EAAE,EAAC,OADf;QAEA,QAAQ,EAAEC,iBAFV;QAGA,MAAM,EAAEC;MAHR;QAAA;QAAA;QAAA;MAAA,QAFF,EAMDb,kBAAkB,iBAAI;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANrB;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF,eAoBE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAQ,QAAQ,EAAE,CAACC,WAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QApBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAxED;;GAAMT,W;;KAAAA,W;AA0EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}